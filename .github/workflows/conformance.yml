name: Conformance

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: true
    - run: |
        echo "REF: '$REF'"

        subref="${REF#*/}"
        event="${subref%/*}"
        tag="${REF##*/}"

        echo "subref: '$subref'"
        echo "event: '$event', TAG?: '$tag'"
      env:
        REF: ${{ github.ref }}

  conformance:
    if: false
    runs-on: ubuntu-latest
    env:
      RUBYOPT: -W0 # To suppress warnings

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: true
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
    - name: Install Fluentd
      run: |
        gem install -N fluentd
    - uses: dlang-community/setup-dlang@v1
      with:
        compiler: ldc-latest
    - name: Install medal
      run: |
        git clone https://github.com/tom-tan/medal.git
        cd medal
        dub build -b release
        sudo cp bin/medal /usr/bin
        cd $GITHUB_WORKSPACE
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Setup Python for testing
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.x'
    - name: Install cwltest
      run: pip install cwltest
    - name: Run example
      run: cwltest --tool $GITHUB_WORKSPACE/ep3-runner --test test.yml --timeout=30 --junit-xml=junit.xml
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: junit-example.xml
        path: junit.xml
    - name: Prepare CWL repository for conformance test
      run: git clone --depth 1 https://github.com/common-workflow-language/common-workflow-language.git cwl
    - name: Run conformance test
      run: |
        cd cwl
        ./run_test.sh RUNNER=$GITHUB_WORKSPACE/ep3-runner EXTRA='--debug' --badgedir=badges --junit-xml=junit.xml --timeout=30 || true
        cd $GITHUB_WORKSPACE
    - name: Save badges
      if: success() && github.event_name == 'push'
      run: |
        git clone --depth 1 https://${GITHUB_ACTOR}:${CONFORMANCE_TOKEN}@github.com/tom-tan/conformance.git

        cd conformance
        mkdir -p conformance/ep3/cwl_${cwlVersion}
        rm -rf conformance/ep3/cwl_${cwlVersion}/ep3_latest
        cp -r $GITHUB_WORKSPACE/cwl/${cwlVersion}/badges conformance/ep3/cwl_${cwlVersion}/ep3_latest
        commit=$(echo $GITHUB_SHA | cut -b -6)
        printf '{ "subject": "commit", "status": "%s", "color": "blue" }' $commit > conformance/ep3/cwl_${cwlVersion}/ep3_latest/commit.json

        git add conformance/ep3/cwl_${cwlVersion}/ep3_latest
        git config user.name "ep3 bot"
        git config user.email "ep3-bot@users.noreply.github.com"
        git diff-index --quiet HEAD || git commit -m "Conformance test of ep3 for CWL ${cwlVersion}" -m " Commit: ${GITHUB_SHA}"
        git push --quiet
      env:
        cwlVersion: v1.0
        CONFORMANCE_TOKEN: ${{ secrets.CONFORMANCE_TOKEN }}
    - uses: actions/upload-artifact@v1
      with:
        name: junit.xml
        path: cwl/v1.0/junit.xml

  docker:
    runs-on: ubuntu-latest
    needs: conformance
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/tom-tan/ep3
          tag-match: v\d+.\d+.\d+
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
            ghcr.io/tom-tan/ep3:master
